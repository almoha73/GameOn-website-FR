@use '../abstracts';

.bground {
    display: none;
    position: fixed;
    z-index: 2;
    left: 0;
    top: 0;
    @include abstracts.widthHeight(100%, 100%);
    overflow: hidden;
    background-color: abstracts.$color-tertiary;
    .content {
        margin: 2% auto;
        width: 100%;
        max-width: 500px;
        max-height: 850px;
        animation-name: modalopen;
        animation-duration: 0.8s;
        background: abstracts.$color-quaternary;
        border-radius: 8px;
        overflow: hidden;
        position: relative;
        color: abstracts.$color-white;
        //padding-top: 10px;
        @media screen and (max-width: 766px){
                margin: 9vh auto 0;
                width: 100%;
                min-height: 0;
                max-height: 657px;
                border-radius: 8px 8px 0 0;;
        }
        @media screen and (max-width: 1036px) {
            z-index: 4;
        }
        .modal-body {
            padding: 15px 8%;
            margin: 15px auto;
            @media screen and (max-width: 766px){
                padding: 5px 8%;
                height: 570px;
            }
        }
      }
}
form .formData1, form .formData{
    & label {
        font-family: abstracts.$font-default;
        font-size: 13px;
        font-weight: normal;
        display: inline-block;
        margin-bottom: 10px;
        margin-top: 17px;
        @media screen and (max-width: 766px){
            margin-bottom: 0px;
            font-size: 12px;
            margin-top: 7px;
        }
    }
    & input {
        padding: 8px;
        border: 0.8px solid #ccc;
        outline: none;
        &.text-control {
            margin: 0;
            padding: 8px;
            @include abstracts.widthHeight(100%, 55px);
            border-radius: 8px;
            font-size: 20px;
            @media screen and (max-width: 766px){
                height: 38px;
            }
          }
    }

    & p.help{
        width: 100%;
        height: 12px;
        margin-top: 3px;
        font-size: 12px;
        font-weight: normal;
        @media screen and (max-width: 766px){
            font-size: 11px;
        }
    }
    & span.help{
        font-size: 10px;
        line-height: 35px;
        margin: auto;
    }
}
.radio-input{
    @media screen and (max-width: 766px){
        display: flex;
        flex-wrap: wrap;
        justify-content: left;
    }
}
.formData span.GameOn{
    @media screen and (max-width: 766px){
        display: none;
    }
}

form .formData{
    & .checkbox-label,
    .checkbox2-label {
        display: inline-block;
        position: relative;
        margin-left: 20px;
        font-size: 12px;
        font-weight: normal;
    }
    & .checkbox-label[for^="location"]{
        @media screen and (max-width: 766px){
            margin-top: 10px;
            margin-bottom: 4px;
            font-size: 11px;
            width: 50px;
            margin-right: 2px;
        }
        @media screen and (min-width: 766px){
            width: 70px;
            margin-top: 5px;
        } 
    }
    & .checkbox-label[for^="location2"]{
        width: 75px;
        @media screen and (min-width: 766px){
            width: 100px;
        } 
    }
    & .checkbox2-label[for^="checkbox"]{
        margin-top: 10px;
        @media screen and (max-width: 766px){
            margin-top: 0px;
        }
    }
    & .checkbox-label .checkbox-icon,.checkbox2-label .checkbox-icon {
        display: block;
        @include abstracts.widthHeight(20px, 20px);
        border: 2px solid abstracts.$color-quinary;
        @include abstracts.modalCheckBox;
        left: -30px;
        top: -1px; 
        @media screen and (max-width: 766px){
            @include abstracts.widthHeight(15px, 15px);
            left: -20px;
        }  
    }
    & .checkbox-label .checkbox-icon::after{
        content: "";
        @include abstracts.widthHeight(13px, 13px);
        background-color: abstracts.$color-quinary;
        @include abstracts.modalCheckBox;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
        opacity: 0;
        @media screen and (max-width: 766px){
            @include abstracts.widthHeight(8px, 8px);
            transform: translate(-55%, -55%);
        }
    }
    & .checkbox-input, .checkbox-input-1 {
        display: none;
    }
    & .checkbox-input:checked + .checkbox-label .checkbox-icon::after,
    .checkbox-input:checked + .checkbox2-label .checkbox-icon::after {
      opacity: 1;
    }
    & .checkbox-input:checked + .checkbox2-label .checkbox-icon {
        background: #27927a;
    }
    & .checkbox2-label .checkbox-icon {
        border-radius: 4px;
        border: 0;
        background: #c4c4c4;
    }
    & .checkbox2-label .checkbox-icon::after {
        content: "";
        @include abstracts.widthHeight(12px, 7px);
        border-radius: 3px;
        background: transparent;
        border: 2px solid transparent;
        border-bottom-color: abstracts.$color-white;
        border-left-color: abstracts.$color-white;
        transform: rotate(-45deg);
        left: 25%;
        top: 18%;
        position: absolute;
        opacity: 0;
        
    }
}
p.text-label{
    font-size: 13px;
    margin-top: 10px;
    margin-bottom: 10px;
    font-weight: normal;
    @media screen and (max-width: 766px){
        font-size: 12px;
        margin-bottom: 0px;
    }
}
.checkbox2-label{
    margin-bottom: 0;
}
span.obligatoire{
    font-size: 10px;
    display: inline-block;
    margin-left: 10px;
    width: 42px;
    height: 10px;
}
.btn-submit, .btn-close{
    @include abstracts.button;
    @media screen and (max-width: 766px){
        padding: 10px 45px;
        font-size: 12px; 
        margin: 10px auto;  
    }
    @media screen and (min-width: 766px){
        margin: 10px auto;
    }
    
}

.close {
    position: absolute;
    right: 15px;
    top: 15px;
    @include abstracts.widthHeight(32px, 32px);
    opacity: 1;
    cursor: pointer;
    transform: scale(0.7);
        &:before, &:after {
            position: absolute;
            left: 15px;
            content: " ";
            @include abstracts.widthHeight(3px, 33px);
            background-color: #fff;
            @media screen and (max-width: 766px){
                @include abstracts.widthHeight(3px, 25px);
            }
            
        }
        &:before {
            transform: rotate(45deg);
        }
        &:after {
            transform: rotate(-45deg);
          }
}
  
  

